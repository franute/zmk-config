/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2

&caps_word {
    continue-list = <UNDERSCORE MINUS DELETE BACKSPACE LEFT RIGHT>;
};

/ {
    behaviors {
        ctrl_caps: qmk_like_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED_HOLD";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&caps_word>;
        };
        
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp LBKC>, <&kp RBKC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T      |   |  Y      |  U   |  I  |  O  |  P  |  ESC |
            // | CTRL |  A  |  S  |  D  |  F  |  G      |   |  H      |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B      |   |  N      |  M   |  ,  |  .  |  /  | SHFT |
            //                    |LALT |LGUI | LWR/SPC |   | RSE/ENT | RSE  | ALT |

            bindings = <
            &kp TAB               &kp Q   &kp W     &kp E     &kp R      &kp T        &kp Y        &kp U    &kp I      &kp O   &kp P    &kp ESC
            &ctrl_caps LCTRL CAPS &kp A   &kp S     &kp D     &kp F      &kp G        &kp H        &kp J    &kp K      &kp L   &kp SEMI &kp SQT
            &kp LSHFT             &kp Z   &kp X     &kp C     &kp V      &kp B        &kp N        &kp M    &kp COMMA  &kp DOT &kp FSLH &kp RSHFT
                                                    &kp LALT  &kp LGUI   &lt 1 RET    &lt 2 SPACE  &kp BSPC &lt 3 BSPC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |LA+F4 |      | LG+H | PRSC |      |   |  `   | HOME |  UP  | END  |      | INS   |
            // |      | LGUI | LALT | LSHF | LCTR |      |   | TAB  | LEFT | DOWN | RGHT |      |       |
            // | SHFT |      |      |      |      |      |   |      | PGUP |      | PGDN |      |       |
            //                      |      |ADJUST|      |   | DEL  | BSPC |      |

            bindings = <
  &none  &kt LA(F4)      &none  &kp LG(H)    &kp PSCRN     &none    &kp GRAVE  &kp HOME    &kp UP     &kp END    &none  &kp INS
  &none   &kt LGUI   &kt LALT   &kt LSHFT    &kt LCTRL     &none    &kp TAB    &kp LEFT    &kp DOWN   &kp RIGHT  &none  &none
  &trans      &none      &none      &none        &none     &none    &none      &kp PG_UP   &none      &kp PG_DN  &none  &none
                                    &none        &mo 4     &trans   &kp DEL    &kp BSPC    &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  `   |
            // |      |  !  |  "  |  Â£  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  #   |
            // | SHFT |  |  |  \  | [/] | {/} |  _  |   |  _  |  +  |  =  |  .  |     |  ~   |
            //                    |LALT |LGUI |BSPC |   |     |     | ALT |

            bindings = <
  &none  &kp N1        &kp N2    &kp N3    &kp N4    &kp N5       &kp N6    &kp N7    &kp N8          &kp N9    &kp N0   &kp GRAVE
  &none  &kp EXCL      &kp AT    &kp HASH  &kp DLLR  &kp PERCENT  &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR &kp BSLH
 &trans  &kp LS(NUBS)  &kp NUBS  &td0      &td1      &kp UNDER    &kp MINUS &kp PLUS  &kp EQUAL       &kp DOT   &none    &kp PIPE
                                 &trans    &trans    &kp BSPC     &trans    &kp RALT  &none
            >;
        };

        FN_LAYER {
            bindings = <
  &none   &kp F1   &kp F2  &kp F3  &kp F4   &kp F5   &none   &none     &none      &none     &none    &none
  &none   &kp F6   &kp F7  &kp F8  &kp F9  &kp F10   &none   &kp RCTRL &kp RSHFT  &kp LALT  &kp LGUI &none
  &none  &kp F11  &kp F12   &none   &none    &none   &none   &none     &none      &none     &none    &none
                            &none   &none    &none   &none   &none     &none
            >;
        };

        ADJUST_LAYER {
            bindings = <
     &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &none  &kp C_MUTE  &kp C_VOL_UP  &none       &none  &bt BT_CLR_ALL
     &none      &none        &none        &none        &none        &none         &none  &kp C_PREV  &kp C_PP      &kp C_NEXT  &none  &none
     &none      &none        &none        &none        &none        &none         &none  &none       &kp C_VOL_DN  &none       &none  &none
                                          &none        &none        &none         &none  &none       &none
            >;
        };
    };
};
